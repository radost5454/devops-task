name: Terraform Deploy

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Terraform Action (plan, apply, destroy)"
        required: true
        default: "plan"
        type: choice
        options: [plan, apply, destroy]

permissions:
  contents: write
  id-token: write

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_VAR_project_id: ${{ secrets.TF_VAR_project_id }}
      TF_VAR_region: ${{ secrets.TF_VAR_region }}
      TF_VAR_db_user: ${{ secrets.TF_VAR_db_user }}
      TF_VAR_db_password: ${{ secrets.TF_VAR_db_password }}
      TF_VAR_db_name: ${{ secrets.TF_VAR_db_name }}

    steps:
      - uses: actions/checkout@v4

      - name: Install git-crypt
        run: sudo apt-get update && sudo apt-get install -y git-crypt

      - name: Unlock git-crypt
        run: |
          echo "${{ secrets.GIT_CRYPT_KEY }}" | base64 --decode > /tmp/git-crypt-key
          git-crypt unlock /tmp/git-crypt-key
          echo "git-crypt unlocked successfully"

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Terraform Init
        working-directory: terraform
        run: terraform init -input=false

      - name: Terraform Plan
        if: ${{ github.event.inputs.action == 'plan' }}
        working-directory: terraform
        run: terraform plan -input=false -out=tfplan

      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        working-directory: terraform
        run: terraform apply -auto-approve

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        working-directory: terraform
        run: terraform destroy -auto-approve

      - name: Commit updated state (encrypts automatically via git-crypt)
        if: ${{ github.event.inputs.action == 'plan' || github.event.inputs.action == 'apply' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add terraform/terraform.tfstate terraform/terraform.tfstate.backup || true
          if git diff --cached --quiet; then
            echo "No state changes to commit"
          else
            git commit -m "Update Terraform state [skip ci]"
            git push
            echo "Encrypted state committed back to repo"
          fi
